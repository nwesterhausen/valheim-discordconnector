name: Build

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [main, staging]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get date
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # Get Valheim version id
      - name: Get Valheim version id
        id: valheimversion
        run: echo "valheimversion=$(curl -s https://api.steamcmd.net/v1/info/896660 | jq -r ".data.\"896660\".depots.branches.public.buildid")" >> $GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Install Dependencies
        run: dotnet restore DiscordConnector/DiscordConnector.csproj
        
      # Cache the results
      - name: Cache Valheim
        id: cachevalheim
        uses: actions/cache@v4
        with:
          path: ~/VHINSTALL
          key: ${{ steps.valheimversion.outputs.valheimversion }}-BepInExPack-5.4.2202   

      - name: Install SteamCMD
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1
        
      # Prepare Valheim dependencies
      - name: Prepare Valheim dependencies
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        run: |
          wget -O bepinex.zip "https://thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.2202/"
          unzip bepinex.zip -d ~/BepInExRaw
          steamcmd +force_install_dir ~/VHINSTALL +login anonymous +app_update 896660 validate +exit
          mv ~/VHINSTALL/valheim_server_Data/ ~/VHINSTALL/valheim_Data/
          mv ~/BepInExRaw/BepInExPack_Valheim/* ~/VHINSTALL/

      - name: Remove old publicized dlls from cache
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        run: |
          rm -rf ~/VHINSTALL/valheim_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/valheim_server_Data/Managed/publicized_assemblies

      - name: Save Cache
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/VHINSTALL
          key: ${{ steps.valheimversion.outputs.valheimversion }}-BepInExPack-5.4.2202
          
      - name: Set references to DLLs
        run: |
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"><PropertyGroup><VALHEIM_INSTALL>$HOME/VHINSTALL/</VALHEIM_INSTALL></PropertyGroup></Project>" > Environment.props

      - name: Reset DoPrebuild.props
        run: |
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"><PropertyGroup><ExecutePrebuild>true</ExecutePrebuild></PropertyGroup></Project>" > DiscordConnector/DoPrebuild.props

      # Build DLLs
      - name: Build solution
        run: |
          dotnet build DiscordConnector.sln --configuration Release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: DiscordConnector-artifact.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: "./Packages/Thunderstore/*.zip"
          # The desired behavior if no files are found using the provided path.

          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
          retention-days: 30
